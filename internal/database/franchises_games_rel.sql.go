// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: franchises_games_rel.sql

package database

import (
	"context"
)

const createFranchiseGameRel = `-- name: CreateFranchiseGameRel :one
INSERT INTO franchises_games_rel (
    franchise_id, games_id, created_at, updated_at
) VALUES (
    $1,
    $2,
    NOW(),
    NOW()
)
RETURNING franchise_id, games_id, created_at, updated_at
`

type CreateFranchiseGameRelParams struct {
	FranchiseID int32
	GamesID     int32
}

func (q *Queries) CreateFranchiseGameRel(ctx context.Context, arg CreateFranchiseGameRelParams) (FranchisesGamesRel, error) {
	row := q.db.QueryRowContext(ctx, createFranchiseGameRel, arg.FranchiseID, arg.GamesID)
	var i FranchisesGamesRel
	err := row.Scan(
		&i.FranchiseID,
		&i.GamesID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteAllFranchiseGameRel = `-- name: DeleteAllFranchiseGameRel :exec
DELETE FROM franchises_games_rel
`

func (q *Queries) DeleteAllFranchiseGameRel(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllFranchiseGameRel)
	return err
}
