// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: game_dlc_rel.sql

package database

import (
	"context"
)

const createGameDlcRel = `-- name: CreateGameDlcRel :one
INSERT INTO game_dlc_rel (
    game_id, dlc_id, created_at, updated_at
) VALUES (
    $1,
    $2,
    NOW(),
    NOW()
)
RETURNING game_id, dlc_id, created_at, updated_at
`

type CreateGameDlcRelParams struct {
	GameID int32
	DlcID  int32
}

func (q *Queries) CreateGameDlcRel(ctx context.Context, arg CreateGameDlcRelParams) (GameDlcRel, error) {
	row := q.db.QueryRowContext(ctx, createGameDlcRel, arg.GameID, arg.DlcID)
	var i GameDlcRel
	err := row.Scan(
		&i.GameID,
		&i.DlcID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteAllGameDlcRel = `-- name: DeleteAllGameDlcRel :exec
DELETE FROM game_dlc_rel
`

func (q *Queries) DeleteAllGameDlcRel(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllGameDlcRel)
	return err
}
