// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: game_expansion_rel.sql

package database

import (
	"context"
)

const createGameExpansionRel = `-- name: CreateGameExpansionRel :one
INSERT INTO game_expansion_rel (
    game_id, expansion_id, created_at, updated_at
) VALUES (
    $1,
    $2,
    NOW(),
    NOW()
)
RETURNING game_id, expansion_id, created_at, updated_at
`

type CreateGameExpansionRelParams struct {
	GameID      int32
	ExpansionID int32
}

func (q *Queries) CreateGameExpansionRel(ctx context.Context, arg CreateGameExpansionRelParams) (GameExpansionRel, error) {
	row := q.db.QueryRowContext(ctx, createGameExpansionRel, arg.GameID, arg.ExpansionID)
	var i GameExpansionRel
	err := row.Scan(
		&i.GameID,
		&i.ExpansionID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteAllGameExpansionRel = `-- name: DeleteAllGameExpansionRel :exec
DELETE FROM game_expansion_rel
`

func (q *Queries) DeleteAllGameExpansionRel(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllGameExpansionRel)
	return err
}
