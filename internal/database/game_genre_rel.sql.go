// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: game_genre_rel.sql

package database

import (
	"context"
)

const createGameGenreRel = `-- name: CreateGameGenreRel :one
INSERT INTO game_genre_rel (
    game_id, genre_id, created_at, updated_at
) VALUES (
    $1,
    $2,
    NOW(),
    NOW()
)
RETURNING game_id, genre_id, created_at, updated_at
`

type CreateGameGenreRelParams struct {
	GameID  int32
	GenreID int32
}

func (q *Queries) CreateGameGenreRel(ctx context.Context, arg CreateGameGenreRelParams) (GameGenreRel, error) {
	row := q.db.QueryRowContext(ctx, createGameGenreRel, arg.GameID, arg.GenreID)
	var i GameGenreRel
	err := row.Scan(
		&i.GameID,
		&i.GenreID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteAllGameGenreRel = `-- name: DeleteAllGameGenreRel :exec
DELETE FROM game_genre_rel
`

func (q *Queries) DeleteAllGameGenreRel(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllGameGenreRel)
	return err
}
