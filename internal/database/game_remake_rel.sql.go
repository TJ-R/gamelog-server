// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: game_remake_rel.sql

package database

import (
	"context"
)

const createGameRemakeRel = `-- name: CreateGameRemakeRel :one
INSERT INTO game_remake_rel (
    game_id, remake_id, created_at, updated_at
) VALUES (
    $1, 
    $2,
    NOW(),
    NOW()
)
RETURNING game_id, remake_id, created_at, updated_at
`

type CreateGameRemakeRelParams struct {
	GameID   int32
	RemakeID int32
}

func (q *Queries) CreateGameRemakeRel(ctx context.Context, arg CreateGameRemakeRelParams) (GameRemakeRel, error) {
	row := q.db.QueryRowContext(ctx, createGameRemakeRel, arg.GameID, arg.RemakeID)
	var i GameRemakeRel
	err := row.Scan(
		&i.GameID,
		&i.RemakeID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteAllGameRemakeRel = `-- name: DeleteAllGameRemakeRel :exec
DELETE FROM game_remake_rel
`

func (q *Queries) DeleteAllGameRemakeRel(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllGameRemakeRel)
	return err
}
