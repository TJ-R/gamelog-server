// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: game_remaster_rel.sql

package database

import (
	"context"
)

const createGameRemasterRel = `-- name: CreateGameRemasterRel :one
INSERT INTO game_remaster_rel (
    game_id, remaster_id, created_at, updated_at
) VALUES (
    $1,
    $2,
    NOW(),
    NOW()
)
RETURNING game_id, remaster_id, created_at, updated_at
`

type CreateGameRemasterRelParams struct {
	GameID     int32
	RemasterID int32
}

func (q *Queries) CreateGameRemasterRel(ctx context.Context, arg CreateGameRemasterRelParams) (GameRemasterRel, error) {
	row := q.db.QueryRowContext(ctx, createGameRemasterRel, arg.GameID, arg.RemasterID)
	var i GameRemasterRel
	err := row.Scan(
		&i.GameID,
		&i.RemasterID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteAllGameRemasterRel = `-- name: DeleteAllGameRemasterRel :exec
DELETE FROM game_remaster_rel
`

func (q *Queries) DeleteAllGameRemasterRel(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllGameRemasterRel)
	return err
}
