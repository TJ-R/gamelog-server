// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: game_types.sql

package database

import (
	"context"
)

const createGameType = `-- name: CreateGameType :one
INSERT INTO game_types (
    id, created_at, updated_at, type
) VALUES (
    $1,
    NOW(),
    NOW(),
    $2
)
RETURNING id, created_at, updated_at, type
`

type CreateGameTypeParams struct {
	ID   int32
	Type string
}

func (q *Queries) CreateGameType(ctx context.Context, arg CreateGameTypeParams) (GameType, error) {
	row := q.db.QueryRowContext(ctx, createGameType, arg.ID, arg.Type)
	var i GameType
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Type,
	)
	return i, err
}

const deleteAllGameTypes = `-- name: DeleteAllGameTypes :exec
DELETE FROM game_types
`

func (q *Queries) DeleteAllGameTypes(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllGameTypes)
	return err
}
