// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: platform_family.sql

package database

import (
	"context"
	"database/sql"
)

const createPlatformFamily = `-- name: CreatePlatformFamily :one
INSERT INTO platform_family (
    id, created_at, updated_at, name, slug
) VALUES (
    $1,
    NOW(),
    NOW(),
    $2,
    $3
)
RETURNING id, created_at, updated_at, name, slug
`

type CreatePlatformFamilyParams struct {
	ID   int32
	Name string
	Slug sql.NullString
}

func (q *Queries) CreatePlatformFamily(ctx context.Context, arg CreatePlatformFamilyParams) (PlatformFamily, error) {
	row := q.db.QueryRowContext(ctx, createPlatformFamily, arg.ID, arg.Name, arg.Slug)
	var i PlatformFamily
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.Slug,
	)
	return i, err
}

const deleteAllPlatformFamilies = `-- name: DeleteAllPlatformFamilies :exec
DELETE FROM platform_family
`

func (q *Queries) DeleteAllPlatformFamilies(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllPlatformFamilies)
	return err
}
