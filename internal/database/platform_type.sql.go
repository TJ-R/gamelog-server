// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: platform_type.sql

package database

import (
	"context"
)

const createPlatformType = `-- name: CreatePlatformType :one
INSERT INTO platform_type (
    id, created_at, updated_at, name
) VALUES (
    $1,
    NOW(),
    NOW(),
    $2
)
RETURNING id, created_at, updated_at, name
`

type CreatePlatformTypeParams struct {
	ID   int32
	Name string
}

func (q *Queries) CreatePlatformType(ctx context.Context, arg CreatePlatformTypeParams) (PlatformType, error) {
	row := q.db.QueryRowContext(ctx, createPlatformType, arg.ID, arg.Name)
	var i PlatformType
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
	)
	return i, err
}

const deleteAllPlatformType = `-- name: DeleteAllPlatformType :exec
DELETE FROM platform_type
`

func (q *Queries) DeleteAllPlatformType(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllPlatformType)
	return err
}
