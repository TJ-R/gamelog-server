// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: themes.sql

package database

import (
	"context"
	"database/sql"
)

const createTheme = `-- name: CreateTheme :one
INSERT INTO themes (
    id, created_at, updated_at, name, slug, url
) VALUES (
    $1,
    NOW(),
    NOW(),
    $2,
    $3,
    $4
)
RETURNING id, created_at, updated_at, name, slug, url
`

type CreateThemeParams struct {
	ID   int32
	Name string
	Slug sql.NullString
	Url  sql.NullString
}

func (q *Queries) CreateTheme(ctx context.Context, arg CreateThemeParams) (Theme, error) {
	row := q.db.QueryRowContext(ctx, createTheme,
		arg.ID,
		arg.Name,
		arg.Slug,
		arg.Url,
	)
	var i Theme
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.Slug,
		&i.Url,
	)
	return i, err
}

const deleteAllThemes = `-- name: DeleteAllThemes :exec
DELETE FROM themes
`

func (q *Queries) DeleteAllThemes(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllThemes)
	return err
}
